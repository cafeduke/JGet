<?xml version="1.0" encoding="utf-8"?>
<project name="tiapmoi.scripting" default="usage">
  <description>
    functional tiapmoi scripting tests.

    @testlogic.group  type="working" values="true"
    @testlogic.group type="install"  values="restricted,compact,full"
    @testlogic.group type="winFIPS" values="false"

  </description>

  <!-- ADDED-BY-SEED Absolute path to this file -->
  <dirname property="tiapmoi.scripting.dir" file="${ant.file.tiapmoi.scripting}" />

  <!-- ADDED-BY-SEED Import base file -->
  <import file="${tiapmoi.scripting.dir}/../tiapmoi-test-base.xml" />

  <!-- =================================================== -->
  <!-- prepare -->
  <!-- =================================================== -->

  <target name="prepare" >
  <description>
     Remove any old logfiles lingering in T_WORK
  </description>
    <firsttimeonly>
     <delete>
        <fileset dir="${twork.dir}" includes="tiapmoi_scripting*"/>
     </delete>
    </firsttimeonly>
  </target>


  <!-- =================================================== -->
  <!-- suite -->
  <!-- =================================================== -->

  <target name="suite">
    <description>
       Scripting tests.  This suite checks out all valid combinations
       of provisioning and process mgmt commands.  Intention here is to
       help uncover any problem with updating within WLST and to discover
       any asynchronous behavior going on.
    </description>
    <antcall target="01"/>
    <antcall target="02"/>
    <antcall target="03"/>
    <antcall target="04"/>
    <antcall target="05"/>
    <antcall target="06"/>
    <antcall target="07"/>
    <antcall target="08"/>
    <antcall target="09"/>
  </target>

    <!-- ====================================================== -->
    <!-- create-remove -->
   <target name="01">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_01"/>
     <param name="ohsName" value="ohs01"/>
     <param name="script"  value="script01.py"/>
    </antcall>
   </target>

    <!-- ====================================================== -->
    <!-- create-update-remove  -->
   <target name="02">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_02"/>
     <param name="ohsName" value="ohs02"/>
     <param name="script"  value="script02.py"/>
    </antcall>
   </target>

    <!-- ====================================================== -->
    <!-- create-start-stop-remove -->
   <target name="03">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_03"/>
     <param name="ohsName" value="ohs03"/>
     <param name="script"  value="script03.py"/>
    </antcall>
   </target>
 
    <!-- ====================================================== -->
    <!-- create-start-stop-update-remove -->
   <target name="04">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_04"/>
     <param name="ohsName" value="ohs04"/>
     <param name="script"  value="script04.py"/>
    </antcall>
   </target>

    <!-- ====================================================== -->
    <!-- create-update-start-update-update-stop-start-stop-remove  -->
   <target name="05">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_05"/>
     <param name="ohsName" value="ohs05"/>
     <param name="script"  value="script05.py"/>
    </antcall>
   </target>

    <!-- ====================================================== -->
  <!-- create-start-restart-update-restart-restart-stop-start-restart-remove -->
   <target name="06">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_06"/>
     <param name="ohsName" value="ohs06"/>
     <param name="script"  value="script06.py"/>
    </antcall>
   </target>
 
    <!-- ====================================================== -->
    <!-- Suite of ten create-remove operations -->
   <target name="07">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_07"/>
     <param name="ohsName" value="ohs07"/>
     <param name="script"  value="script07.py"/>
    </antcall>
   </target>

    <!-- ====================================================== -->
    <!-- Suite of ten start-stop operations -->
   <target name="08">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_08"/>
     <param name="ohsName" value="ohs08"/>
     <param name="script"  value="script08.py"/>
    </antcall>
   </target>

    <!-- ====================================================== -->
    <!-- Suite of ten updates not running, then ten updates running -->
   <target name="09">
    <antcall target="wrapScript" >
     <param name="tstName" value="tiapmoi_scripting_09"/>
     <param name="ohsName" value="ohs09"/>
     <param name="script"  value="script09.py"/>
    </antcall>
   </target>


    <!-- ====================================================== -->
    <target name="wrapScript">
    <description>
      Quick wrapper to call wlstRunScript.
      Params:
         ${script}      - script to run
         ${ohsName}     - OHS instance to create/use
         ${tstName}     - test name
    </description>
       <property name="wlst.dir" value="${tiapmoi.base.dir}/common/wlst/"/>
       <antcall target="wlstRunScript">
          <param name="script" value="${wlst.dir}/${script}"/>
          <param name="ohsName" value="${ohsName}"/>
          <param name="outfile" value="${tstName}.out"/>
       </antcall>
       <antcall target="wlstErrorScan">
         <param name="in.file"  value="${tstName}.out"/>
         <param name="out.file" value="${tstName}.log"/>
       </antcall>
    </target>
  
</project>

 

<?xml version="1.0" encoding="utf-8"?>
<project name="tiapkss.multi1" default="usage">
  <description>
    functional tiapkss multi1 tests.

    @testlogic.group  type="working" values="true"  
    @testlogic.group type="install" values="full"
    @testlogic.group type="winFIPS" values="false"

  </description>

  <!-- ADDED-BY-SEED Absolute path to this file -->
  <dirname property="tiapkss.multi1.dir" file="${ant.file.tiapkss.multi1}" />

  <!-- ADDED-BY-SEED Import base file -->
  <import file="${tiapkss.multi1.dir}/../tiapkss-test-base.xml" />

  <!-- =================================================== -->
  <!-- prepare -->
  <!-- =================================================== -->

  <target name="prepare" >
  <description>
     Remove any old logfiles lingering in T_WORK.
     Create and start a kss3 instance.
     Copy hello.html to htdocs of kss3.  Start kss3
  </description>
    <firsttimeonly>
     <delete>
        <fileset dir="${twork.dir}" includes="tiapkss_multi1*"/>
     </delete>

    <!-- Create a new OHS instance -->
    <antcall target="createOHS">
      <param name="out.log"  value="tiapkss_multi1_crt.log"/>
      <param name="ohs.name" value="kss3"/>
    </antcall>

    <!-- Copy hello world to htdocs -->
    <!-- No SSL configuration necessary as this is the default wallet -->
    <property name="htdocsDir" value="${ohsConfDir}/instances/kss3/htdocs"/>
    <copy file="${tiapkss.base.dir}/common/data/hello.html"
           todir="${htdocsDir}" />

    <!-- Start kss3 -->
    <antcall target="startOHS">
      <param name="out.log"  value="tiapkss_multi1_start.log"/>
      <param name="ohs.name" value="kss3"/>
    </antcall>

    </firsttimeonly>
  </target>

  <!-- =================================================== -->
  <!-- unprepare -->
  <!-- =================================================== -->

  <target name="unprepare" >
  <description>
     Shutdown kss3 instance
  </description>
    <firsttimeonly>
    <trycatch>
    <try>
      <antcall target="stopOHS">
        <param name="out.log"  value="tiapkss_multi1_stop.log"/>
        <param name="ohs.name" value="kss3"/>
      </antcall>
    </try>
    </trycatch>

    <!-- Remove the three keystores -->
    <!-- Otherwise when recreating next time will throw errors -->
    <property name="scriptDir"  value="${team.base.dir}/common/wlst"/>
    <antcall target="wlstRunScript">
      <param name="script"  value="${scriptDir}/multi1_cleanup.py"/>
      <param name="ohsName" value="kss3"/>
      <param name="outfile" value="tiapkss_multi1_clean.log"/>
    </antcall>

    </firsttimeonly>
  </target>

  <!-- =================================================== -->
  <!-- suite -->
  <!-- =================================================== -->

  <target name="suite">
    <description>
       Check out the use of multiple keystores with a single OHS
       instance.  Will use virtual hosts.
    </description>

       <!-- KSS: create three keystores, add certs to each, and -->
       <!-- export to create three OHS wallets -->
       <antcall target="exp1"/>

       <!-- Validate creation of three OHS wallets with certs -->
       <antcall target="val1_k1"/> 
       <antcall target="val1_k2"/>
       <antcall target="val1_k3"/>

       <!-- Bounce & ping OHS -->
       <!-- Also update ssl.conf to use all three -->
       <antcall target="ping1"/>

       <!-- KSS:  k1 - add a cert, k2 - remove two, k3 stays same -->
       <!-- Export back to wallets -->
       <antcall target="exp2"/>

       <!-- Validate update of the three OHS wallets -->
       <antcall target="val2_k1"/>
       <antcall target="val2_k2"/>
       <antcall target="val2_k3"/>

       <!-- Bounce & ping OHS -->
       <!-- No need to update SSL this time -->
       <antcall target="ping2"/> 

  </target>

  <!-- =================================================== -->
  <target name="exp1">
  <description>
      KSS: 
        - create three keystores
        - k1:  add one cert, k2:  add two certs, k3:  add three
        - export to OHS
  </description>
    <property name="tstName" value="tiapkss_multi1_exp1"/>
    <property name="scriptDir"  value="${team.base.dir}/common/wlst"/>
    <property name="goldFile" value="${twork.dir}/${tstName}.gold"/>
    <copy file="${gold.path}/multi1_exp1.gold"
        tofile="${goldFile}"/>

    <!-- Run the script -->
    <antcall target="wlstRunScript">
      <param name="script"  value="${scriptDir}/multi1_exp1.py"/>
      <param name="ohsName" value="kss3"/>
      <param name="outfile" value="${tstName}.out"/>
    </antcall>

    <!-- Check script output vs. expected results -->
    <antcall target="wlstCompareLogs">
      <param name="logfile"  value="${tstName}.out"/>
      <param name="goldfile" value="${tstName}.gold"/>
      <param name="outfile"  value="${tstName}.log"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="val1_k1">
  <description>
    Validate k1 certs
  </description>
    <property name="tstName" value="tiapkss_multi1_val1_k1"/>

    <antcall target="verifyWallet">
       <param name="ohsName" value="kss3"/>
       <param name="keyName" value="k1"/>
       <param name="tstName" value="${tstName}"/>
       <param name="goldOrig" value="multi1_val1_k1.gold"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="val1_k2">
  <description>
    Validate k2 certs
  </description>
    <property name="tstName" value="tiapkss_multi1_val1_k2"/>

    <antcall target="verifyWallet">
       <param name="ohsName" value="kss3"/>
       <param name="keyName" value="k2"/>
       <param name="tstName" value="${tstName}"/>
       <param name="goldOrig" value="multi1_val1_k2.gold"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="val1_k3">
  <description>
    Validate k3 certs
  </description>
    <property name="tstName" value="tiapkss_multi1_val1_k3"/>

    <antcall target="verifyWallet">
       <param name="ohsName" value="kss3"/>
       <param name="keyName" value="k3"/>
       <param name="tstName" value="${tstName}"/>
       <param name="goldOrig" value="multi1_val1_k3.gold"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="verifyWallet">
  <description>
     Helper target for val1.  
       - Run orapki wallet display vs. wallet
       - Compare output from orapki vs. expected goldfile

     Params:
     ${ohsName}  - name of OHS instance
     ${keyName}  - name of keystore - ex:  k1
     ${tstName}  - name of test
     ${goldOrig} - name of goldfile
  </description>

    <property name="walDir"
     value="${ohsConfDir}/instances/${ohsName}/keystores/${keyName}"/>

    <!-- Run:  orapki wallet display -wallet . -->
    <antcall target="oraDisplay">
      <param name="out.log"    value="${tstName}.out"/>
      <param name="walletPath" value="${walDir}"/>
    </antcall>     

    <!-- Compare orapki output with goldfile -->
    <property name="goldFile" value="${twork.dir}/${tstName}.gold"/>
    <copy file="${gold.path}/${goldOrig}"
        tofile="${goldFile}"/>
    <antcall target="wlstFindStr">
      <param name="logfile"  value="${tstName}.out"/>
      <param name="goldfile" value="${goldFile}"/>
      <param name="outfile"  value="${tstName}.log"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="ping1">
  <description>
      OHS:  - set up ssl.conf to use new wallets
            - bounce and ping OHS on all three ports
  </description>
    <property name="tstName" value="tiapkss_multi1_ping1"/>

    <!-- Copy tiapkss_multi1.conf to kss moduleconf directory -->
    <!-- to set up Virtual Hosts on ports 9001, 9002, 9003 -->
    <property name="mod.dir" value="${ohsConfDir}/instances/kss3/moduleconf"/>
    <copy file="${tiapkss.base.dir}/common/data/tiapkss_multi1.conf"
         todir="${mod.dir}"/>
 
    <!-- Bounce OHS and ping on all three ports -->
    <antcall target="pingVH">
       <param name="tstName" value="${tstName}"/>
       <param name="ohsName" value="kss3"/>
    </antcall>

  </target>

  <!-- =================================================== -->
  <target name="exp2">
  <description>
      KSS:
        - k1:  remove cert and add another
          k2:  leave alone, k3:  remove two, add one more
        - export to OHS
  </description>
    <property name="tstName"   value="tiapkss_multi1_exp2"/>
    <property name="scriptDir" value="${team.base.dir}/common/wlst"/>
    <property name="goldFile"  value="${twork.dir}/${tstName}.gold"/>
    <copy file="${gold.path}/multi1_exp2.gold"
        tofile="${goldFile}"/>

    <!-- Run the script -->
    <antcall target="wlstRunScript">
      <param name="script"  value="${scriptDir}/multi1_exp2.py"/>
      <param name="ohsName" value="kss3"/>
      <param name="outfile" value="${tstName}.out"/>
    </antcall>

    <!-- Check script output vs. expected results -->
    <antcall target="wlstCompareLogs">
      <param name="logfile"  value="${tstName}.out"/>
      <param name="goldfile" value="${tstName}.gold"/>
      <param name="outfile"  value="${tstName}.log"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="val2_k1">
  <description>
    Validate k1 certs
  </description>
    <property name="tstName" value="tiapkss_multi1_val2_k1"/>

    <antcall target="verifyWallet">
       <param name="ohsName" value="kss3"/>
       <param name="keyName" value="k1"/>
       <param name="tstName" value="${tstName}"/>
       <param name="goldOrig" value="multi1_val2_k1.gold"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="val2_k2">
  <description>
    Validate k2 certs
  </description>
    <property name="tstName" value="tiapkss_multi1_val2_k2"/>

    <antcall target="verifyWallet">
       <param name="ohsName" value="kss3"/>
       <param name="keyName" value="k2"/>
       <param name="tstName" value="${tstName}"/>
       <param name="goldOrig" value="multi1_val2_k2.gold"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="val2_k3">
  <description>
    Validate k3 certs
  </description>
    <property name="tstName" value="tiapkss_multi1_val2_k3"/>

    <antcall target="verifyWallet">
       <param name="ohsName" value="kss3"/>
       <param name="keyName" value="k3"/>
       <param name="tstName" value="${tstName}"/>
       <param name="goldOrig" value="multi1_val2_k3.gold"/>
    </antcall>
  </target>

  <!-- =================================================== -->
  <target name="ping2">
  <description>
      Bounce and ping OHS.  No need to modify ssl.conf.
  </description>
    <property name="tstName" value="tiapkss_multi1_ping2"/>

    <antcall target="pingVH">
       <param name="tstName" value="${tstName}"/>
       <param name="ohsName" value="kss3"/>
    </antcall>

  </target>

</project>

 
